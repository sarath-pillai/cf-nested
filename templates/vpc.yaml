Description: >
    This template deploys a VPC 
Parameters:
    Environment:
        Description: A name to identify the environment, this will be added to tags and resouces
        Type: String
    VPCCIDR: 
        Description: Main VPC CIDR Range
        Type: String
        Default: 10.12.0.0/16
    PubCIDR1:
        Description: Public Subnet1 CIDR
        Type: String
        Default: 10.12.1.0/24
    PubCIDR2:
        Description: Public Subnet2 CIDR
        Type: String
        Default: 10.12.2.0/24
    PriCIDR1:
        Description: Private Subnet1 CIDR
        Type: String
        Default: 10.12.3.0/24
    PriCIDR2:
        Description: Private Subnet2 CIDR
        Type: String
        Default: 10.12.4.0/24
Resources:
    VPC: 
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref VPCCIDR
            EnableDnsHostnames: true
            Tags: 
                - Key: Name 
                  Value: !Ref Environment
    IGW:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: !Ref Environment
    IGWA:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref IGW
            VpcId: !Ref VPC
    PUB1: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref PubCIDR1
            MapPublicIpOnLaunch: true
            Tags: 
                - Key: Name 
                  Value: !Sub ${Environment} Pub Sub 1
    PUB2: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 1, !GetAZs '' ]
            CidrBlock: !Ref PubCIDR2
            MapPublicIpOnLaunch: true
            Tags: 
                - Key: Name 
                  Value: !Sub ${Environment} Pub Sub 2
    PRIV1: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref PriCIDR1
            MapPublicIpOnLaunch: false
            Tags: 
                - Key: Name 
                  Value: !Sub ${Environment} Priv Sub 1
    PRIV2: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 1, !GetAZs '' ]
            CidrBlock: !Ref PubCIDR1
            MapPublicIpOnLaunch: false
            Tags: 
                - Key: Name 
                  Value: !Sub ${Environment} Priv Sub 2
    NGWEIP:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties: 
            Domain: vpc
    NGW: 
        Type: AWS::EC2::NatGateway
        Properties: 
            AllocationId: !GetAtt NGW1EIP.AllocationId
            SubnetId: !Ref PubCIDR1
    PUBROUTETABLE:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref VPC
            Tags: 
                - Key: Name 
                  Value: !Sub ${Environment} Public Routes
    PUBDEFAULTROUTE: 
        Type: AWS::EC2::Route
        DependsOn: IGWA
        Properties: 
            RouteTableId: !Ref PUBROUTETABLE
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref IGW
    PUBROUTEASSOCIATE1:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PUBROUTETABLE
            SubnetId: !Ref PUB1
    PUBROUTEASSOCIATE2:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PUBROUTETABLE
            SubnetId: !Ref PUB2
    PRIVROUTETABLE:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref VPC
            Tags: 
                - Key: Name 
                  Value: !Sub ${Environment} Private Routes
    PRIVDEFAULTROUTE:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PRIVROUTETABLE
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NGW
    PRIVROUTEASSOCIATE1:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PRIVROUTETABLE
            SubnetId: !Ref PRIV1
    PRIVROUTEASSOCIATE2:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PRIVROUTETABLE
            SubnetId: !Ref PRIV2
Outputs: 

    VPC: 
        Description: VPC That got created
        Value: !Ref VPC
    PublicSubnets:
        Description: List of Public Subnets
        Value: !Join [ ",", [ !Ref PUB1, !Ref PUB2 ]]
    PrivateSubnets:
        Description: List of Private Subnets
        Value: !Join [ ",", [ !Ref PRIV1, !Ref PRIV2 ]]
    PublicSubnet1:
        Description: Public Subnet 1
        Value: !Ref PUB1
    PublicSubnet2: 
        Description: Public Subnet 2
        Value: !Ref PUB2
    PrivateSubnet1:
        Description: Private Subnet 1
        Value: !Ref PRIV1
    PrivateSubnet2: 
        Description: Private Subnet 2
        Value: !Ref PRIV2
